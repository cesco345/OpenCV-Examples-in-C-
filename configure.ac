#AC_INIT([NAME OF PACKAGE], [VERSION], [BUG-REPORT-ADDRESS], [TAR-NAME], [URL])
AC_INIT([pazzo], [0.0.1], [fpiscani@stemapks.com], [pazzo], [http://www.stemapks.com])

# Include the version that is required
AC_PREREQ([2.69])

# Include flag command for Automake
AM_INIT_AUTOMAKE([subdir-objects foreign -Wall -Werror])

# Files to be generated by Autoconf
AC_CONFIG_FILES([Makefile])

# Incldes the path to one source file in your project
# Allows autoconf to check that it is really where it should be
AC_CONFIG_SRCDIR([src/displayImage.cpp])

# Include command to generate config.h file with useful info
AC_CONFIG_HEADERS([config.h])

# Check for a C++ compiler.
AC_PROG_CXX

# Checks for libraries.
PKG_CHECK_MODULES([GLIB], [glib-2.0], [have_libglib=yes], [have_libglib=no])
AM_CONDITIONAL([GLIB],  [test "$have_libglib" = "yes"])

PKG_CHECK_MODULES([OPENCV], [opencv], [have_opencv=yes], [have_libopencv=no])
AM_CONDITIONAL([LIB_OPENCV],  [test "$have_libopencv" = "yes"])

PKG_CHECK_MODULES(OPENCV, [OPENCV >= 2.4.9])
 AC_SUBST(OPENCV_CFLAGS)
 AC_SUBST(OPENCV_LIBS)

# Add debug support
AC_ARG_ENABLE(debug,
  AS_HELP_STRING(
    [--enable-debug],
    [enable debugging, default: no]),
    [case "${enableval}" in
      yes) debug=true ;;
      no)  debug=false ;;
      *)   AC_MSG_ERROR([bad value ${enableval} for --enable-debug]) ;;
    esac],
    [debug=false])
AM_CONDITIONAL(DEBUG, test x"$debug" = x"true")
AM_COND_IF(DEBUG,
    AC_DEFINE(DEBUG, 1, [Define to 0 if this is a release build]),
    AC_DEFINE(DEBUG, 0, [Define to 1 or higher if this is a debug build]))


# Autoconf output generation
AC_OUTPUT



